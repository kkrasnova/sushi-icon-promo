import { PrismaClient } from './generated/prisma/index.js';

const prisma = new PrismaClient();

async function checkData() {
  try {
    console.log('üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ...\n');

    const owners = await prisma.owner.findMany();
    const customers = await prisma.customer.findMany();
    const sessions = await prisma.ownerLoginSession.findMany();

    console.log('üë§ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã:');
    owners.forEach(owner => {
      console.log(`   ‚úì ${owner.name} (${owner.email})`);
    });

    console.log(`\nüë• –ö–ª–∏–µ–Ω—Ç—ã (${customers.length}):`);
    customers.forEach(customer => {
      console.log(`   ‚úì ${customer.firstName} ${customer.lastName} - ${customer.phoneNumber}`);
    });

    console.log(`\nüîê –°–µ—Å—Å–∏–∏ –≤—Ö–æ–¥–∞: ${sessions.length}`);

    console.log('\n‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ –º–µ—Å—Ç–µ!');
    console.log('\nüåê –í–∞—à —Å–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É:');
    console.log('   Frontend: http://localhost:5190');
    console.log('   Backend: http://localhost:3000');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    await prisma.$disconnect();
  }
}

checkData();

